<?php

/**
 *                          SOFTWARE USE PERMISSION
 *
 *  By downloading and accessing this software and associated documentation
 *  files ("Software") you are granted the unrestricted right to deal in the
 *  Software, including, without limitation the right to use, copy, modify,
 *  publish, sublicense and grant such rights to third parties, subject to the
 *  following conditions:
 *
 *  The following copyright notice and this permission notice shall be included
 *  in all copies, modifications or substantial portions of this Software:
 *  Copyright Â© 2016 GSM Association.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS," WITHOUT WARRANTY OF ANY KIND, INCLUDING
 *  BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 *  PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 *  COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR
 *  IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE. YOU AGREE TO INDEMNIFY AND HOLD HARMLESS THE AUTHORS AND COPYRIGHT
 *  HOLDERS FROM AND AGAINST ANY SUCH LIABILITY.
 */
require_once(dirname(__FILE__) . '/../bootstrap.php');

use MCSDK\utils\RestClient;
use Zend\Http\Client;
use Zend\Http\Response;

class RestClientTest extends PHPUnit_Framework_TestCase
{
    private $restClient;

    public function __construct()
    {
        $this->restClient = new RestClient();

        parent::__construct();
    }

    public function testGetHttpClientContext()
    {
        $username = 'testUsername';
        $password = 'testPassword';
        $uriForRealm = 'http://testuriforrealm.com';

        $response = $this->restClient->getHttpClientContext($username, $password, $uriForRealm);

        $this->assertInstanceOf('Zend\Http\Client', $response);
    }

    /**
     * @expectedException RuntimeException
     */
    public function testCallRestEndPoint()
    {
        $context = new Client();
        $uri = 'http://testingnothing1345678980.com';
        $httpPath = '/some/rest/path';
        $params = array();
        $timeout = 100000;
        $currentCookies = array();

        $this->restClient->callRestEndPoint($context, $uri, $httpPath, $params, $timeout, $currentCookies);
    }
}
