<?php

/**
 *                          SOFTWARE USE PERMISSION
 *
 *  By downloading and accessing this software and associated documentation
 *  files ("Software") you are granted the unrestricted right to deal in the
 *  Software, including, without limitation the right to use, copy, modify,
 *  publish, sublicense and grant such rights to third parties, subject to the
 *  following conditions:
 *
 *  The following copyright notice and this permission notice shall be included
 *  in all copies, modifications or substantial portions of this Software:
 *  Copyright Â© 2016 GSM Association.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS," WITHOUT WARRANTY OF ANY KIND, INCLUDING
 *  BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 *  PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 *  COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR
 *  IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE. YOU AGREE TO INDEMNIFY AND HOLD HARMLESS THE AUTHORS AND COPYRIGHT
 *  HOLDERS FROM AND AGAINST ANY SUCH LIABILITY.
 */

namespace MCSDK\discovery;

/**
 * Class to hold discovery exceptions.
 */
class DiscoveryException extends \DomainException
{

    private $_uri;
    private $_responseCode;
    private $_headers;
    private $_contents;

    /**
     * DiscoveryException constructor.
     *
     * @param string $message the exception message
     * @param null $uri the uri for this exception
     * @param int $responseCode the http code
     * @param null $headers andy headers from this response
     * @param null $contents the body of the exception
     */
    public function __construct($message, $uri = null, $responseCode = 0,
                                $headers = null, $contents = null)
    {
        $this->_uri = $uri;
        $this->_responseCode = $responseCode;
        $this->_headers = $headers;
        $this->_contents = $contents;

        parent::__construct($message, $responseCode);
    }

    /**
     * The URI of Http request that caused the exception.
     *
     * @return string The URI of Http request that caused the exception, if available,
     * null otherwise.
     */
    public function getUri()
    {
        return $this->_uri;
    }

    /**
     * The response code of the Http response that caused the exception.
     *
     * @return int The response code of the Http response that caused the exception,
     * if available, 0 otherwise.
     */
    public function getResponseCode()
    {
        return $this->_responseCode;
    }

    /**
     * The Http headers of the Http response that caused the exception.
     *
     * @return array The Http headers of the Http response that caused the exception,
     * if available, null otherwise.
     */
    public function getHeaders()
    {
        return $this->_headers;
    }

    /**
     * The contents of the Http response that caused the exception.
     *
     * @return string The contents of the Http response that caused the exception, if
     * available, null otherwise.
     */
    public function getContents()
    {
        return $this->_contents;
    }

}

