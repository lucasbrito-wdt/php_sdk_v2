<?php

/**
 *                          SOFTWARE USE PERMISSION
 *
 *  By downloading and accessing this software and associated documentation
 *  files ("Software") you are granted the unrestricted right to deal in the
 *  Software, including, without limitation the right to use, copy, modify,
 *  publish, sublicense and grant such rights to third parties, subject to the
 *  following conditions:
 *
 *  The following copyright notice and this permission notice shall be included
 *  in all copies, modifications or substantial portions of this Software:
 *  Copyright Â© 2016 GSM Association.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS," WITHOUT WARRANTY OF ANY KIND, INCLUDING
 *  BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 *  PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 *  COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR
 *  IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE. YOU AGREE TO INDEMNIFY AND HOLD HARMLESS THE AUTHORS AND COPYRIGHT
 *  HOLDERS FROM AND AGAINST ANY SUCH LIABILITY.
 */

namespace MCSDK\utils;

/**
 * Class to hold a parsed Jwt payload.
 *
 * The nonce and pcr (sub) values are extracted from the claims.
 */
class JwtPayload
{
    private $_nonce;
    private $_sub;
    private $_claims;

    /**
     * The nonce value.
     *
     * May be null.
     *
     * @return string The nonce.
     */
    public function get_nonce()
    {
        return $this->_nonce;
    }

    /**
     * The sub value.
     *
     * May be null. Also known as pcr.
     *
     * @return string The sub value.
     */
    public function get_sub()
    {
        return $this->_sub;
    }

    /**
     * The claims in the Jwt payload.
     *
     * @return \stdClass The claims.
     */
    public function getClaims()
    {
        return $this->_claims;
    }

    /**
     * Set the claims, nonce and sub class level variables
     *
     * @param \stdClass $claims
     */
    public function setClaims($claims)
    {
        $this->_claims = $claims;

        $this->_nonce = JsonUtils::getOptionalStringValue($claims, Constants::NONCE_CLAIM_KEY);
        $this->_sub = JsonUtils::getOptionalStringValue($claims, Constants::SUB_CLAIM_KEY);
    }
}
